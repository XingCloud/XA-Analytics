.container-fluid
  #container.row-fluid
    .span2
      .well.sidebar-nav
        %h3
          = t("menu")
        %url.nav.nav-list
          %li
            %a{:href => template_projects_path()}
              %i.icon-home
              = t("projects")
          %li
            %a.relative{:href => "reports"}
              %i.icon-file
              = t("reports")
          %li
            %a.relative{:href => "segments"}
              %i.icon-user
              = t("segments")
          %li
            %a.relative{:href => "dashboard"}
              %i.icon-bar-chart
              = t("dashboard")
          %li
            %a.relative{:href => "maintenance_plans"}
              %i.icon-volume-up
              = t("maintenance_plans")
          %li
            %a.relative{:href => "translations"}
              %i.icon-flag
              = t("translations")
    .span10
      #main-container
        %h3
          = t("projects")
        %hr
        %table.table.table-striped.table-bordered.table-condensed
          %thead
            %th
              = t("project")
            %th
              = t("identifier")
          %tbody
            - @projects.each do |project|
              %tr
                %td= link_to project.name, project_path(project)
                %td= project.identifier
        = will_paginate @projects

:javascript
  I18n.fallbacks = true;
  I18n.defaultlocale = "en";
  I18n.locale = "#{I18n.locale}";
  window.ROOT = "/template/projects";
  Instances.Collections = {
    user_attributes: new Analytics.Collections.UserAttributes([]),
    segments: new Analytics.Collections.Segments(#{Segment.template.map(&:js_attributes).to_json}),
    expressions: new Analytics.Collections.Expressions([]),
    report_categories: new Analytics.Collections.ReportCategories(#{ReportCategory.template.map(&:js_attributes).to_json}),
    reports: new Analytics.Collections.Reports(#{Report.template.map(&:js_attributes).to_json}),
    report_tabs: new Analytics.Collections.ReportTabs([]),
    widgets: new Analytics.Collections.Widgets(#{Widget.template.map(&:js_attributes).to_json}),
    metrics: new Analytics.Collections.Metrics(#{Metric.template.where(:combine_id => nil).map(&:js_attributes).to_json}),
    maintenance_plans: new Analytics.Collections.MaintenancePlans(#{MaintenancePlan.all.map(&:attributes).to_json}),
    translations: new Analytics.Collections.Translations([])
  };
  Instances.Collections.reports.init_report_tabs();
  Instances.Collections.segments.init_expressions();
  Instances.Routers = {
    report_categories_router: new Analytics.Routers.ReportCategoriesRouter(),
    reports_router: new Analytics.Routers.ReportsRouter(),
    segments_router: new Analytics.Routers.SegmentsRouter(),
    widgets_router: new Analytics.Routers.WidgetsRouter(),
    maintenance_plans_router: new Analytics.Routers.MaintenancePlansRouter(),
    translations_router: new Analytics.Routers.TranslationsRouter()
  };

  Instances.Models.user = new Analytics.Models.User({role:"admin",name:"xaadmin"})

  $('.nav.nav-list li a.relative').each(function (index, el){
    href = $(el).attr("href");
    $(el).attr("href", Analytics.Utils.hrefWrapper(href));
  });
  if (Analytics.Utils.checkPushState()){
    Backbone.history.start({pushState: true, root: window.ROOT});
  }
  else{
    Backbone.history.start();
  }